;;
;; Header files for LanuchJetton
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Mint$_store
builder $Mint$_store(builder build_0, (int, slice) v) inline;

;; $Mint$_store_cell
cell $Mint$_store_cell((int, slice) v) inline;

;; $CreateNewJetton$_load
(slice, ((slice, cell, int, int))) $CreateNewJetton$_load(slice sc_0) inline;

;; $CreateNewJetton$_load_bounced
(slice, (tuple)) $CreateNewJetton$_load_bounced(slice sc_0) inline;

;; $LanuchJetton$_store
builder $LanuchJetton$_store(builder build_0, (slice, int, slice, int) v) inline;

;; $LanuchJetton$_load
(slice, ((slice, int, slice, int))) $LanuchJetton$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $ContractInformation$_to_external
(int, slice, slice, int) $ContractInformation$_to_external(((int, slice, slice, int)) v) inline;

;; $LanuchJetton$init$_load
(slice, ((slice, int))) $LanuchJetton$init$_load(slice sc_0) inline;

;; $SampleJetton$init$_store
builder $SampleJetton$init$_store(builder build_0, (slice, cell, int, int) v) inline;

;; $LanuchJetton$_contract_init
(slice, int, slice, int) $LanuchJetton$_contract_init(slice $owner, int $fee) impure inline_ref;

;; $LanuchJetton$_contract_load
(slice, int, slice, int) $LanuchJetton$_contract_load() impure inline_ref;

;; $LanuchJetton$_contract_store
() $LanuchJetton$_contract_store((slice, int, slice, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $LanuchJetton$_fun_lanuchfee
((slice, int, slice, int), ()) $LanuchJetton$_fun_lanuchfee((slice, int, slice, int) $self, int $fee) impure inline_ref;

;; $ContractInformation$_constructor_fee_owner_testAddress_hasminted
((int, slice, slice, int)) $ContractInformation$_constructor_fee_owner_testAddress_hasminted(int fee, slice owner, slice testAddress, int hasminted) inline;

;; $LanuchJetton$_fun_get_lanuchjetton_data
((slice, int, slice, int), (int, slice, slice, int)) $LanuchJetton$_fun_get_lanuchjetton_data((slice, int, slice, int) $self) impure inline_ref;

;; $LanuchJetton$_fun_forward
((slice, int, slice, int), ()) $LanuchJetton$_fun_forward((slice, int, slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $LanuchJetton$_fun_notify
((slice, int, slice, int), ()) $LanuchJetton$_fun_notify((slice, int, slice, int) $self, cell $body) impure inline;

;; $SampleJetton$_init_child
(cell, cell) $SampleJetton$_init_child(cell sys', slice $owner, cell $content, int $max_supply, int $rate) inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body_code_data(slice to, int value, int mode, int bounce, cell body, cell code, cell data) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $Mint$_constructor_amount_receiver
((int, slice)) $Mint$_constructor_amount_receiver(int amount, slice receiver) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
